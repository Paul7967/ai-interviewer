services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-interviewer-db
    environment:
      POSTGRES_DB: ai_interviewer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ai-interviewer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build:
      context: ./backend_fastapi
      dockerfile: Dockerfile
    container_name: ai-interviewer-backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/ai_interviewer
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      ENVIRONMENT: production
    volumes:
      - ./backend_fastapi:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-interviewer-network
    command: >
      sh -c "
        prisma generate &&
        prisma migrate deploy &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-interviewer-frontend
    environment:
      VITE_API_URL: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - ai-interviewer-network
    command: npm run dev

  # Ollama с поддержкой GPU
  ollama:
    image: ollama/ollama:latest
    container_name: ai-interviewer-ollama
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
      - OLLAMA_DEBUG=INFO
    volumes:
      - ollama_models:/root/.ollama/models
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - ai-interviewer-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  ollama_models:
    driver: local
  ollama_data:
    driver: local

networks:
  ai-interviewer-network:
    driver: bridge
