/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Root
         * @description Корневой endpoint
         */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/interview/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Start Interview
         * @description Начать новое интервью
         *
         *     - **topic**: Тема интервью (например, "javascript-basics")
         *     - **difficulty**: Уровень сложности ("junior", "middle", "senior")
         *     - **question_count**: Количество вопросов
         */
        post: operations["start_interview_api_interview_start_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/interview/question": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Question
         * @description Получить текущий вопрос для интервью
         *
         *     - **interview_id**: ID сессии интервью
         */
        get: operations["get_question_api_interview_question_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/interview/answer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Submit Answer
         * @description Отправить ответ на вопрос и получить фидбэк
         *
         *     - **interview_id**: ID сессии интервью
         *     - **question_id**: ID вопроса
         *     - **answer**: Ответ пользователя
         *     - **time_spent**: Время, потраченное на ответ (в секундах)
         */
        post: operations["submit_answer_api_interview_answer_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/interview/end": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * End Interview
         * @description Завершить интервью
         *
         *     - **interview_id**: ID сессии интервью
         */
        post: operations["end_interview_api_interview_end_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AnswerRequest */
        AnswerRequest: {
            /** Interview Id */
            interview_id: string;
            /** Question Id */
            question_id: string;
            /** Answer */
            answer: string;
            /** Time Spent */
            time_spent: number;
        };
        /** Feedback */
        Feedback: {
            /** Score */
            score: number;
            /** Comment */
            comment: string;
            /** Suggestions */
            suggestions: string[];
            /** Correct Answer */
            correct_answer: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InterviewSession */
        InterviewSession: {
            /** Id */
            id: string;
            /** Topic */
            topic: string;
            /** Difficulty */
            difficulty: string;
            /** Current Question */
            current_question: number;
            /** Total Questions */
            total_questions: number;
            /**
             * Score
             * @default 0
             */
            score: number;
            /**
             * Start Time
             * Format: date-time
             */
            start_time: string;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
        };
        /** InterviewStartRequest */
        InterviewStartRequest: {
            /** Topic */
            topic: string;
            /**
             * Difficulty
             * @default middle
             */
            difficulty: string;
            /**
             * Question Count
             * @default 10
             */
            question_count: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    start_interview_api_interview_start_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InterviewStartRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterviewSession"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_question_api_interview_question_get: {
        parameters: {
            query: {
                interview_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    submit_answer_api_interview_answer_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AnswerRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Feedback"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    end_interview_api_interview_end_post: {
        parameters: {
            query: {
                interview_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
