"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã AI Interviewer API

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à FastAPI —Å–µ—Ä–≤–µ—Ä
–±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –µ–≥–æ –∑–∞–ø—É—Å–∫–∞.
"""

from main import app, interviews, questions_db
from fastapi.testclient import TestClient
import json

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
client = TestClient(app)

def demo_api():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö API endpoints"""
    
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI Interviewer API")
    print("=" * 50)
    
    # 1. –¢–µ—Å—Ç –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint")
    print("-" * 30)
    response = client.get("/")
    print(f"Status: {response.status_code}")
    print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    
    # 2. –ù–∞—á–∞–ª–æ –∏–Ω—Ç–µ—Ä–≤—å—é
    print("\n2Ô∏è‚É£ –ù–∞—á–∞–ª–æ –∏–Ω—Ç–µ—Ä–≤—å—é")
    print("-" * 30)
    interview_data = {
        "topic": "javascript-basics",
        "difficulty": "middle",
        "question_count": 3
    }
    response = client.post("/api/interview/start", json=interview_data)
    print(f"Status: {response.status_code}")
    result = response.json()
    print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
    
    if response.status_code == 200:
        interview_id = result["id"]
        
        # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        print("\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞")
        print("-" * 30)
        response = client.get(f"/api/interview/question?interview_id={interview_id}")
        print(f"Status: {response.status_code}")
        result = response.json()
        print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            question_id = result["question"]["id"]
            
            # 4. –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
            print("\n4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞")
            print("-" * 30)
            answer_data = {
                "interview_id": interview_id,
                "question_id": question_id,
                "answer": "var –∏–º–µ–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, let –∏ const –∏–º–µ—é—Ç –±–ª–æ—á–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, const –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å",
                "time_spent": 60
            }
            response = client.post("/api/interview/answer", json=answer_data)
            print(f"Status: {response.status_code}")
            result = response.json()
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            # 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
            print("\n5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞")
            print("-" * 30)
            response = client.get(f"/api/interview/question?interview_id={interview_id}")
            print(f"Status: {response.status_code}")
            result = response.json()
            print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            if response.status_code == 200:
                question_id = result["question"]["id"]
                
                # 6. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                print("\n6Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞")
                print("-" * 30)
                answer_data = {
                    "interview_id": interview_id,
                    "question_id": question_id,
                    "answer": "Closure - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏",
                    "time_spent": 45
                }
                response = client.post("/api/interview/answer", json=answer_data)
                print(f"Status: {response.status_code}")
                result = response.json()
                print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
                
                # 7. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é
                print("\n7Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é")
                print("-" * 30)
                response = client.post(f"/api/interview/end?interview_id={interview_id}")
                print(f"Status: {response.status_code}")
                result = response.json()
                print(f"Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

def show_available_questions():
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"""
    print("\nüìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    print("=" * 50)
    
    for topic, questions in questions_db.items():
        print(f"\n–¢–µ–º–∞: {topic}")
        print("-" * 30)
        for i, question in enumerate(questions, 1):
            print(f"{i}. {question['text']}")
            print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {question['difficulty']}")
            print()

def show_api_structure():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É API"""
    print("\nüîß –°—Ç—Ä—É–∫—Ç—É—Ä–∞ API:")
    print("=" * 30)
    
    endpoints = [
        ("GET", "/", "–ö–æ—Ä–Ω–µ–≤–æ–π endpoint —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± API"),
        ("POST", "/api/interview/start", "–ù–∞—á–∞—Ç—å –Ω–æ–≤–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é"),
        ("GET", "/api/interview/question", "–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å"),
        ("POST", "/api/interview/answer", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å"),
        ("POST", "/api/interview/end", "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é")
    ]
    
    for method, path, description in endpoints:
        print(f"{method:6} {path:<25} - {description}")

if __name__ == "__main__":
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É API
    show_api_structure()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    show_available_questions()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    demo_api()
